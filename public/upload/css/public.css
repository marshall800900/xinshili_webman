.index_main {
    display: block;
}

* {
    -webkit-touch-callout: none;
    -o-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: "Microsoft YaHei", PingFangSC-Regular, PingFang SC, sans-serif;
}

a {
    text-decoration: none;
    font-size: 0.875rem;
    color: #555;
    cursor: pointer;
}

a:hover {
    text-decoration: none;
    color: #333;
}

a:focus {
    outline: none;
    color: #333;
}

a:hover {
    text-decoration: none;
}

body, html, .app {
    padding: 0;
    margin: 0;
    background: #fff;
}

img {
    max-width: 100%;
}

a, body, h1, h2, h3, h4, h5, h6, ul, li, span, p, em, img, input, button, div {
    font-size: .875rem;
    font-style: normal;
    list-style: none;
    transition: all 0.2s linear;
    -moz-transition: all 0.2s linear;
    -webkit-transition: all 0.2s linear;
    -o-transition: all 0.2s linear;
    margin: 0;
    padding: 0;
}

a:focus, body:focus, h1:focus, h2:focus, h3:focus, h4:focus, h5:focus, h6:focus, ul:focus, li:focus, span:focus, p:focus, em:focus, img:focus, input:focus, button:focus, div:focus {
    outline: none;
}

.noPad {
    padding: 0 !important;
}

p {
    line-height: 1.5;
}

/* Safari，Chrome WebKit browsers */
textarea::-webkit-input-placeholder, input::-webkit-input-placeholder {
    color: #ccc;
}

/* 火狐 Mozilla Firefox 4 to 18 */
textarea::-webkit-input-placeholder, input:-moz-placeholder {
    color: #ccc;
}

/* 火狐 Mozilla Firefox 19+ */
textarea::-webkit-input-placeholder, input::-moz-placeholder {
    color: #ccc;
}

/* Internet Explorer 10+ */
textarea::-webkit-input-placeholder, input:-ms-input-placeholder {
    color: #ccc;
}

select, textarea, input {
    outline: none;
}

.playMain {
    height: 90vh;
    background: url("../img/slogan.png") no-repeat #f7f5f6 center bottom;
    background-size: 70%;
}

.playTitle {
    width: 100%;
    background: #dadada;
    padding: 0 15px;
    font-size: 14px;
    height: 60px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.playTitle .playTitleL, .playTitle .playTitleR {
    width: 50px;
    height: 60px;
    font-size: 14px;
    display: flex;
    align-items: center;
}

.playTitle .h2 {
    padding-top: 8px;
    height: 60px;
}

.playTitle .h2 h2 {
    font-weight: bold;
    font-size: 16px;
}

.playTitle .h2 p {
    font-size: 14px;
    font-weight: normal;
}

.playTs {
    width: 100%;
    color: #000;
    font-size: 14px;
    text-align: center;
    padding: 10px 0;
}

.money {
    font-weight: bold;
    color: #333;
    font-size: 30px;
    text-align: center;
    background: #f6f6f6;
    padding: 10px 0 0 0;
    width: 100%;
    letter-spacing: 0;
    line-height: 42px;
    height: 42px;
}

.play_itemList {
}

.play_itemList .play_item {
    display: flex;
    align-items: center;
    height: 44px;
    justify-content: space-between;
    padding: 0 15px;
    background: #ffffff;
    border-bottom: 1px solid #f5f5f5;
}

.play_itemList .play_item .itemL {
    width: 80px;
    font-weight: bold;
    color: #333;
}

.play_itemList .play_item .itemR {
    flex: 1;
    text-align: right;
}

.play_itemList .play_item .itemR input {
    border: 1px solid #fff;
    text-align: right;
    width: 100%;
}

.play_itemList .play_item .itemR2 input {
    text-align: left;
    border: 1px solid #fff;
}

.play_itemList .play_item .itemR2 .line_r {
    border-right: 2px solid #e3e3e3;
}

.play_itemList .play_item p {
    color: #5a98d2;
    font-size: 14px;
    padding-left: 10px;
    font-weight: bold;
}

.bottomText {
    color: #888;
    margin-top: 12px;
    height: 22px;
    line-height: 22px;
    padding: 0 15px;
    display: flex;
    align-items: center;
}

.bottomText2 {
    margin-top: 12px;
}

.bottomText em {
    color: #5a98d2;
}

.bottomText .agreement-wrapper .show {
    display: block;
    margin-right: 10px;
}

.bottomText .agreement-wrapper span {
    display: none;
}

.bomButton {
    padding: 25px 15px 15px 15px;
}

.bomButton button {
    background-image: -webkit-linear-gradient(#ed171f,#ed171f)!important;
    background-color: #ed171f!important;
    color: #fff;
    border: none;
    font-size: 18px;
    border-radius: 5px;
    height: 44px;
    line-height: 44px;
    width: 100%;
}

.noPlay button {
    opacity: .3;
}

.ts {
    background-image: -webkit-linear-gradient(#ff5353,#ff5353)!important;
    background-color: #ff5353!important;
    color: #fff;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    width: 100%;
    top: 60px;
    display: none;
}

@media screen and (max-width: 375px) {
    .toTopBox .toTopList .toTopCon {
        right: -15px;
        width: 100vw;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
